{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","backgroundColor","rows","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","defaultProps","Alert","alert","role","msg","App","setmode","setAlert","message","setTimeout","aboutText","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89dec1af.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                </li> */}\r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode=='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\"  onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav> \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n  };\r\n\r\nNavbar.defaultProps = {\r\n    title : \"TextUtils\"\r\n}\r\n","import { useState } from \"react\"\r\nimport React from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to Upper Case!!\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to Lower Case!!\",\"success\");\r\n    }\r\n\r\n    const handleClearText = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"text Cleared !!\",\"success\");\r\n    }\r\n    const Capitalize = () => {\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText)\r\n        props.showAlert(\"Text Capitalized !!\",\"success\");\r\n    }\r\n    \r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        text.setSelectionRange(0,9999)\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard !!\",\"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(\"\")\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'#042743' }}>\r\n            <h1>{props.heading}</h1>\r\n            <div className = \"my-3\">\r\n            <textarea value={text} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} className=\"form-control\" id=\"myBox\" rows=\"8\" onChange={handleOnChange} ></textarea>\r\n            <button className=\"btn btn-primary my-3 mx-1 \" onClick={handleUpClick} >Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLoClick} >Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={handleClearText} >Clear Text</button>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={Capitalize} >Capitalize</button>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopy} >Copy Text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'#042743' }}>\r\n            <h1>Text Summary Here</h1>\r\n            <p>{text.split(\" \").length} words {text.length} Characters</p>\r\n            <p>{0.008 * text.split(\"\").length } Minutes Taken</p>\r\n            <h2>Preview:</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{props.alert.type}</strong> {props.alert.msg} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import About from './Components/About';\n// import { BrowserRouter as BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light') //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(\"null\")\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMode = ()=>{\n    if(mode == \"light\"){\n      setmode('dark');\n      document.body.style.backgroundColor=\"black\"\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n      setInterval(() => {\n        document.title = \"Text Editor - Dark Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Made By Vivek Modi\";\n      }, 1500);\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light Mode has been enabled\",\"success\")\n      setInterval(() => {\n\n        document.title = \"Text Editor - Light Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Made By Vivek Modi\";\n      }, 1500);\n    }\n  }\n  return (\n    \n    <>\n    {/* <BrowserRouter> */}\n    <Navbar aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert }/>\n    <div className=\"container my-3\">\n    {/* <Routes>\n          <Route exact path=\"/\" element = {<Textform showAlert ={showAlert} heading=\"Enter the text to Analyzer Below\" mode={mode}/>}/>\n    </Routes>\n    <Routes>\n      <Route exact path=\"/About\" element = {<About/>}/>\n    </Routes> */}\n    <Textform showAlert ={showAlert} heading=\"Enter the text to Analyzer Below\" mode={mode}/>\n    </div>\n    {/* </BrowserRouter> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}